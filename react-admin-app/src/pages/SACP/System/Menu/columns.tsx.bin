import {Tag, Space, Button, Popconfirm} from 'antd';

import {TABLE_COLUMN_OPTIONS} from '@/constants';

import type {ProColumnType} from '@ant-design/pro-components';

type IProps = {
    menuUni: string;
    formatMessage: any;
    hasAccess: (menuUni: string, actionKey: string) => boolean;
    handleAuthFeature: (role: any) => void;
    handleAddFeature: (row?: any) => void;
    handleActionDisable: (id: string) => void;
    handleActionEnable: (id: string) => void;
};

export const renderActionListColumns = ({
                                            menuUni,
                                            formatMessage,
                                            hasAccess,
                                            handleAuthFeature,
                                            handleAddFeature,
                                            handleActionDisable,
                                            handleActionEnable
                                        }: IProps): ProColumnType<any>[] => {
    return [
        {
            title: formatMessage({id: 'pages.menu.name'}),
            dataIndex: 'name',
            key: 'name',
            align: 'center',
            width: 120
        },
        {
            title: formatMessage({id: 'pages.system.game.status'}),
            dataIndex: 'stat',
            key: 'stat',
            width: 60,
            align: 'center',
            render: (v) => {
                return (
                    <Tag className={v === 1 ? 'tag' : 'tag-error'}>
                        {v === 1
                            ? formatMessage({id: 'pages.system.game.enable'})
                            : formatMessage({id: 'pages.system.game.off'})}
                    </Tag>
                );
            }
        },
        {
            title: formatMessage({id: 'common.ctm'}),
            dataIndex: 'ctm',
            key: 'ctm',
            align: 'center',
            width: 120
        },
        {
            title: formatMessage({id: 'common.utm'}),
            dataIndex: 'utm',
            key: 'utm',
            align: 'center',
            width: 120
        },
        {
            ...TABLE_COLUMN_OPTIONS,
            title: formatMessage({id: 'pages.system.allocation.operate'}),
            width: 100,
            render: (_, record) => {
                return (
                    <Space>
                        <Button
                            size="small"
                            type="link"
                            onClick={() => handleAuthFeature(record)}
                        >
                            {formatMessage({id: 'pages.menu.authorization'})}
                        </Button>
                        <Button
                            type="link"
                            size="small"
                            onClick={() => handleAddFeature(record)}
                        >
                            {formatMessage({id: 'pages.system.game.edit'})}
                        </Button>
                        {record.stat === 1 ? (
                            <Popconfirm
                                title={`${formatMessage({id: 'pages.system.game.off'})}?`}
                                onConfirm={() => handleActionDisable(record.id)}
                                okText={formatMessage({id: 'pages.confirm'})}
                                cancelText={formatMessage({id: 'pages.cancel'})}
                            >
                                <Button
                                    type="link"
                                    size="small"
                                    style={{color: 'var(--error)'}}
                                >
                                    {formatMessage({id: 'pages.system.game.off'})}
                                </Button>
                            </Popconfirm>
                        ) : (
                            <Button
                                type="link"
                                size="small"
                                onClick={() => handleActionEnable(record.id)}
                            >
                                {formatMessage({id: 'pages.system.game.enable'})}
                            </Button>
                        )}
                    </Space>
                );
            }
        }
    ];
};
